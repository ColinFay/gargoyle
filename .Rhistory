})
output$evt <- renderTable({
watch("poum")
head(z$v)
})
}
shinyApp(ui, server)
library(shiny)
pkgload::load_all()
ui <- function(request){
tagList(
h4('Go'),
actionButton("y", "y"),
h4('Output of z$v'),
tableOutput("evt")
)
}
server <- function(input, output, session){
init( "plop", "pouet", "poum")
z <- new.env()
observeEvent( input$y , {
trigger("plop")
z$v <- mtcars
})
on(c("pouet", "plop"), {
z$v <- airquality
trigger("poum")
})
output$evt <- renderTable({
watch("poum")
head(z$v)
})
}
shinyApp(ui, server)
library(shiny)
pkgload::load_all()
ui <- function(request){
tagList(
actionButton("go", "go")
)
}
server <- function(
input,
output,
session
){
e <- new.env()
e$x <- reactiveVal()
e$x(1)
e$y <- reactiveVal()
e$y(1)
observeEvent( input$go , {
e$x(e$x() + 1)
e$y(e$y() + 1)
})
observe({
print("lol")
})
}
shinyApp(ui, server)
library(shiny)
pkgload::load_all()
ui <- function(request){
tagList(
h4('Go'),
actionButton("y", "y"),
h4('Output of z$v'),
tableOutput("evt")
)
}
server <- function(input, output, session){
init( "plop", "pouet", "poum")
z <- new.env()
observeEvent( input$y , {
trigger("plop")
z$v <- mtcars
})
on(c("pouet", "plop"), {
z$v <- airquality
trigger("poum")
})
output$evt <- renderTable({
watch("poum")
head(z$v)
})
}
shinyApp(ui, server)
library(shiny)
pkgload::load_all()
ui <- function(request){
tagList(
h4('Go'),
actionButton("y", "y"),
h4('Output of z$v'),
tableOutput("evt")
)
}
server <- function(input, output, session){
init( "plop", "pouet", "poum")
z <- new.env()
observeEvent( input$y , {
trigger("plop")
z$v <- mtcars
})
on("pouet", {
z$v <- airquality
trigger("poum")
})
output$evt <- renderTable({
watch("poum")
head(z$v)
})
}
shinyApp(ui, server)
library(shiny)
pkgload::load_all()
ui <- function(request){
tagList(
h4('Go'),
actionButton("y", "y"),
h4('Output of z$v'),
tableOutput("evt")
)
}
server <- function(input, output, session){
init( "plop", "pouet", "poum")
z <- new.env()
observeEvent( input$y , {
trigger("plop")
z$v <- mtcars
})
on("pouet", {
z$v <- airquality
trigger("poum")
})
output$evt <- renderTable({
watch("poum")
head(z$v)
})
}
shinyApp(ui, server)
library(shiny)
pkgload::load_all()
ui <- function(request){
tagList(
h4('Go'),
actionButton("y", "y"),
h4('Output of z$v'),
tableOutput("evt")
)
}
server <- function(input, output, session){
init( "plop", "pouet", "poum")
z <- new.env()
observeEvent( input$y , {
trigger("pouet")
z$v <- mtcars
})
on("pouet", {
z$v <- airquality
trigger("poum")
})
output$evt <- renderTable({
watch("poum")
head(z$v)
})
}
shinyApp(ui, server)
get_logs()
library(shiny)
pkgload::load_all()
ui <- function(request){
tagList(
h4('Go'),
actionButton("y", "y"),
h4('Output of z$v'),
tableOutput("evt")
)
}
server <- function(input, output, session){
init( "plop", "pouet", "poum")
z <- new.env()
observeEvent( input$y , {
trigger("pouet")
z$v <- mtcars
})
on("pouet", {
z$v <- airquality
trigger("poum")
})
output$evt <- renderTable({
watch("poum")
head(z$v)
})
}
shinyApp(ui, server)
get_logs()
library(shiny)
pkgload::load_all()
ui <- function(request){
tagList(
h4('Go'),
actionButton("y", "y"),
h4('Output of z$v'),
tableOutput("evt")
)
}
server <- function(input, output, session){
init( "plop", "pouet", "poum")
z <- new.env()
observeEvent( input$y , {
trigger("pouet")
z$v <- mtcars
})
on("pouet", {
z$v <- airquality
trigger("poum")
})
output$evt <- renderTable({
watch("poum")
head(z$v)
})
}
shinyApp(ui, server)
get_logs()
trigger
library(shiny)
pkgload::load_all()
ui <- function(request){
tagList(
h4('Go'),
actionButton("y", "y"),
h4('Output of z$v'),
tableOutput("evt")
)
}
server <- function(input, output, session){
init( "plop", "pouet", "poum")
z <- new.env()
observeEvent( input$y , {
trigger("pouet")
z$v <- mtcars
})
on("pouet", {
z$v <- airquality
trigger("poum")
})
output$evt <- renderTable({
watch("poum")
head(z$v)
})
}
shinyApp(ui, server)
library(shiny)
pkgload::load_all()
ui <- function(request){
tagList(
h4('Go'),
actionButton("y", "y"),
h4('Output of z$v'),
tableOutput("evt")
)
}
server <- function(input, output, session){
init( "plop", "pouet", "poum")
z <- new.env()
observeEvent( input$y , {
trigger("pouet")
z$v <- mtcars
})
on("pouet", {
z$v <- airquality
trigger("poum")
})
output$evt <- renderTable({
watch("poum")
head(z$v)
})
}
shinyApp(ui, server)
pkgload::load_all()
devtools::document()
library(shiny)
pkgload::load_all()
ui <- function(request){
tagList(
h4('Go'),
actionButton("y", "y"),
h4('Output of z$v'),
tableOutput("evt")
)
}
server <- function(input, output, session){
init( "plop", "pouet", "poum")
z <- new.env()
observeEvent( input$y , {
trigger("pouet")
z$v <- mtcars
})
on("pouet", {
z$v <- airquality
trigger("poum")
})
output$evt <- renderTable({
watch("poum")
head(z$v)
})
}
shinyApp(ui, server)
get_logs()
library(shiny)
pkgload::load_all()
ui <- function(request){
tagList(
h4('Go'),
actionButton("y", "y"),
h4('Output of z$v'),
tableOutput("evt")
)
}
server <- function(input, output, session){
init( "plop", "pouet", "poum")
z <- new.env()
observeEvent( input$y , {
trigger("pouet")
z$v <- mtcars
})
on("pouet", {
z$v <- airquality
trigger("poum")
})
output$evt <- renderTable({
watch("poum")
head(z$v)
})
}
shinyApp(ui, server)
get_logs()
clear_logs()
get_logs()
iris[["blabl"]]
library(shiny)
pkgload::load_all()
ui <- function(request){
tagList(
h4('Go'),
actionButton("y", "y"),
h4('Output of z$v'),
tableOutput("evt")
)
}
server <- function(input, output, session){
init( "plop", "pouet", "poum")
z <- new.env()
observeEvent( input$y , {
trigger("plop")
z$v <- mtcars
})
on("plop", {
z$v <- airquality
trigger("pouet")
})
on("pouet", {
z$v <- airquality
trigger("poum")
})
output$evt <- renderTable({
watch("poum")
head(z$v)
})
}
shinyApp(ui, server)
library(shiny)
pkgload::load_all()
ui <- function(request){
tagList(
h4('Go'),
actionButton("y", "y"),
h4('Output of z$v'),
tableOutput("evt")
)
}
server <- function(input, output, session){
init( "plop", "pouet", "poum")
z <- new.env()
observeEvent( input$y , {
trigger("plop")
z$v <- mtcars
})
on("plop", {
z$v <- airquality
trigger("pouet")
})
on("pouet", {
z$v <- airquality
trigger("poum")
})
output$evt <- renderTable({
watch("poum")
head(z$v)
})
}
shinyApp(ui, server)
library(shiny)
pkgload::load_all()
ui <- function(request){
tagList(
h4('Go'),
actionButton("y", "y"),
h4('Output of z$v'),
tableOutput("evt")
)
}
server <- function(input, output, session){
init( "plop", "pouet", "poum")
z <- new.env()
observeEvent( input$y , {
trigger("plop")
z$v <- mtcars
})
on("plop", {
z$v <- airquality
trigger("pouet")
})
on("poudet", {
z$v <- airquality
trigger("poum")
})
output$evt <- renderTable({
watch("poum")
head(z$v)
})
}
shinyApp(ui, server)
library(shiny)
pkgload::load_all()
ui <- function(request){
tagList(
h4('Go'),
actionButton("y", "y"),
h4('Output of z$v'),
tableOutput("evt")
)
}
server <- function(input, output, session){
init( "plop", "pouet", "poum")
z <- new.env()
observeEvent( input$y , {
trigger("plop")
z$v <- mtcars
})
on("plop", {
z$v <- airquality
trigger("pouet")
})
on("poudet", {
z$v <- airquality
trigger("poum")
})
output$evt <- renderTable({
watch("poum")
head(z$v)
})
}
shinyApp(ui, server)
library(shiny)
pkgload::load_all()
ui <- function(request){
tagList(
h4('Go'),
actionButton("y", "y"),
h4('Output of z$v'),
tableOutput("evt")
)
}
server <- function(input, output, session){
init( "plop", "pouet", "poum")
z <- new.env()
observeEvent( input$y , {
trigger("plop")
z$v <- mtcars
})
on("plop", {
z$v <- airquality
trigger("pouet")
})
on("pouet", {
z$v <- airquality
trigger("poum")
})
output$evt <- renderTable({
watch("poum")
head(z$v)
})
}
shinyApp(ui, server)
ls("V")
ls(pat = "V")
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
usethis::use_package("attempt")
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
bubble::node_repl()
